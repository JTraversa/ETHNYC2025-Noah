{"id":"8c821819b50e50a0b1cf17157f05b71d","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"contracts/TestStruct.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract TestStruct {\r\n    struct Test {\r\n        address addr;\r\n        uint256 num;\r\n        address[] tokens;\r\n    }\r\n    \r\n    mapping(address => Test) public tests;\r\n    \r\n    function setTest(address user, address[] calldata _tokens) external {\r\n        Test memory temp = Test({\r\n            addr: user,\r\n            num: 123,\r\n            tokens: _tokens\r\n        });\r\n        \r\n        tests[user] = temp;\r\n    }\r\n    \r\n    function getTest(address user) external view returns (address, uint256, uint256) {\r\n        Test memory test = tests[user];\r\n        return (test.addr, test.num, test.tokens.length);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/TestStruct.sol":{"ast":{"absolutePath":"contracts/TestStruct.sol","exportedSymbols":{"TestStruct":[67]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"TestStruct","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":67,"linearizedBaseContracts":[67],"name":"TestStruct","nameLocation":"70:10:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TestStruct.Test","id":9,"members":[{"constant":false,"id":3,"mutability":"mutable","name":"addr","nameLocation":"119:4:0","nodeType":"VariableDeclaration","scope":9,"src":"111:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"111:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"num","nameLocation":"142:3:0","nodeType":"VariableDeclaration","scope":9,"src":"134:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4,"name":"uint256","nodeType":"ElementaryTypeName","src":"134:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"tokens","nameLocation":"166:6:0","nodeType":"VariableDeclaration","scope":9,"src":"156:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7,"nodeType":"ArrayTypeName","src":"156:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"Test","nameLocation":"95:4:0","nodeType":"StructDefinition","scope":67,"src":"88:92:0","visibility":"public"},{"constant":false,"functionSelector":"8828136c","id":14,"mutability":"mutable","name":"tests","nameLocation":"224:5:0","nodeType":"VariableDeclaration","scope":67,"src":"192:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Test_$9_storage_$","typeString":"mapping(address => struct TestStruct.Test)"},"typeName":{"id":13,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"200:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"192:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Test_$9_storage_$","typeString":"mapping(address => struct TestStruct.Test)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":12,"nodeType":"UserDefinedTypeName","pathNode":{"id":11,"name":"Test","nameLocations":["211:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"211:4:0"},"referencedDeclaration":9,"src":"211:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_storage_ptr","typeString":"struct TestStruct.Test"}}},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"310:172:0","statements":[{"assignments":[24],"declarations":[{"constant":false,"id":24,"mutability":"mutable","name":"temp","nameLocation":"333:4:0","nodeType":"VariableDeclaration","scope":37,"src":"321:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_memory_ptr","typeString":"struct TestStruct.Test"},"typeName":{"id":23,"nodeType":"UserDefinedTypeName","pathNode":{"id":22,"name":"Test","nameLocations":["321:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"321:4:0"},"referencedDeclaration":9,"src":"321:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_storage_ptr","typeString":"struct TestStruct.Test"}},"visibility":"internal"}],"id":30,"initialValue":{"arguments":[{"id":26,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"366:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"313233","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"390:3:0","typeDescriptions":{"typeIdentifier":"t_rational_123_by_1","typeString":"int_const 123"},"value":"123"},{"id":28,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"416:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_123_by_1","typeString":"int_const 123"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":25,"name":"Test","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"340:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Test_$9_storage_ptr_$","typeString":"type(struct TestStruct.Test storage pointer)"}},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["360:4:0","385:3:0","408:6:0"],"names":["addr","num","tokens"],"nodeType":"FunctionCall","src":"340:95:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_memory_ptr","typeString":"struct TestStruct.Test memory"}},"nodeType":"VariableDeclarationStatement","src":"321:114:0"},{"expression":{"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":31,"name":"tests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"456:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Test_$9_storage_$","typeString":"mapping(address => struct TestStruct.Test storage ref)"}},"id":33,"indexExpression":{"id":32,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"462:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"456:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_storage","typeString":"struct TestStruct.Test storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":34,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"470:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_memory_ptr","typeString":"struct TestStruct.Test memory"}},"src":"456:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_storage","typeString":"struct TestStruct.Test storage ref"}},"id":36,"nodeType":"ExpressionStatement","src":"456:18:0"}]},"functionSelector":"05de8c06","id":38,"implemented":true,"kind":"function","modifiers":[],"name":"setTest","nameLocation":"251:7:0","nodeType":"FunctionDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"user","nameLocation":"267:4:0","nodeType":"VariableDeclaration","scope":38,"src":"259:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"_tokens","nameLocation":"292:7:0","nodeType":"VariableDeclaration","scope":38,"src":"273:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"273:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18,"nodeType":"ArrayTypeName","src":"273:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"258:42:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"310:0:0"},"scope":67,"src":"242:240:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":65,"nodeType":"Block","src":"575:108:0","statements":[{"assignments":[51],"declarations":[{"constant":false,"id":51,"mutability":"mutable","name":"test","nameLocation":"598:4:0","nodeType":"VariableDeclaration","scope":65,"src":"586:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_memory_ptr","typeString":"struct TestStruct.Test"},"typeName":{"id":50,"nodeType":"UserDefinedTypeName","pathNode":{"id":49,"name":"Test","nameLocations":["586:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"586:4:0"},"referencedDeclaration":9,"src":"586:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_storage_ptr","typeString":"struct TestStruct.Test"}},"visibility":"internal"}],"id":55,"initialValue":{"baseExpression":{"id":52,"name":"tests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"605:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Test_$9_storage_$","typeString":"mapping(address => struct TestStruct.Test storage ref)"}},"id":54,"indexExpression":{"id":53,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"611:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"605:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_storage","typeString":"struct TestStruct.Test storage ref"}},"nodeType":"VariableDeclarationStatement","src":"586:30:0"},{"expression":{"components":[{"expression":{"id":56,"name":"test","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"635:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_memory_ptr","typeString":"struct TestStruct.Test memory"}},"id":57,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"640:4:0","memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":3,"src":"635:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":58,"name":"test","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"646:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_memory_ptr","typeString":"struct TestStruct.Test memory"}},"id":59,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"651:3:0","memberName":"num","nodeType":"MemberAccess","referencedDeclaration":5,"src":"646:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":60,"name":"test","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"656:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Test_$9_memory_ptr","typeString":"struct TestStruct.Test memory"}},"id":61,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"661:6:0","memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":8,"src":"656:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"668:6:0","memberName":"length","nodeType":"MemberAccess","src":"656:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":63,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"634:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,uint256,uint256)"}},"functionReturnParameters":48,"id":64,"nodeType":"Return","src":"627:48:0"}]},"functionSelector":"6cba9709","id":66,"implemented":true,"kind":"function","modifiers":[],"name":"getTest","nameLocation":"503:7:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"user","nameLocation":"519:4:0","nodeType":"VariableDeclaration","scope":66,"src":"511:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"510:14:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":66,"src":"548:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":66,"src":"557:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":66,"src":"566:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"547:27:0"},"scope":67,"src":"494:189:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":68,"src":"61:625:0","usedErrors":[],"usedEvents":[]}],"src":"33:655:0"},"id":0}},"contracts":{"contracts/TestStruct.sol":{"TestStruct":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getTest","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address[]","name":"_tokens","type":"address[]"}],"name":"setTest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tests","outputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"num","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657610384908161001c8239f35b600080fdfe6080604090808252600436101561001557600080fd5b600090813560e01c90816305de8c061461013e575080636cba97091461008a57638828136c1461004457600080fd5b34610087576020366003190112610087576001600160a01b039060019083908361006c6102df565b16815280602052209182541691015482519182526020820152f35b80fd5b50346100875760208060031936011261013a576001600160a01b0392836100af6102df565b168352828252808320928151946100c5866102fa565b80855416865260019160026001870154968689019788520190845193848784549182815201938352878320925b81811061012557505050509561010c83606098038461032c565b8284820152511693519051928251948552840152820152f35b835486168552938801939282019282016100f2565b5080fd5b905082346102db57806003193601126102db576101596102df565b67ffffffffffffffff91906024358381116102d757366023820112156102d7578060040135948486116102d3578560051b936024858401013681116102cf57929190936101a5826102fa565b60018060a01b0394858092168084526020958685019a607b8c526101cd8885519b018b61032c565b89526024878a0196015b8181106102a5575050600294508184019788528a5289855289209151166bffffffffffffffffffffffff60a01b8254161781556001965160018201550192518051948511610291576801000000000000000085116102915781908454868655808710610267575b500192865280862091865b858110610254578780f35b8451821684820155938201938601610249565b8589528787848b2092830192015b82811061028357505061023e565b8a8155859450899101610275565b634e487b7160e01b87526041600452602487fd5b8092945095909294953588811681036102cb5781528601949387939092909187016101d7565b8c80fd5b8880fd5b8680fd5b8580fd5b8280fd5b600435906001600160a01b03821682036102f557565b600080fd5b6060810190811067ffffffffffffffff82111761031657604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176103165760405256fea2646970667358221220deea1845a1c00256a255f133674d83e12db028d0e6547bd903f5715df7c63a1c64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x384 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5DE8C06 EQ PUSH2 0x13E JUMPI POP DUP1 PUSH4 0x6CBA9709 EQ PUSH2 0x8A JUMPI PUSH4 0x8828136C EQ PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x1 SWAP1 DUP4 SWAP1 DUP4 PUSH2 0x6C PUSH2 0x2DF JUMP JUMPDEST AND DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP3 SLOAD AND SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH2 0xAF PUSH2 0x2DF JUMP JUMPDEST AND DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP3 DUP2 MLOAD SWAP5 PUSH2 0xC5 DUP7 PUSH2 0x2FA JUMP JUMPDEST DUP1 DUP6 SLOAD AND DUP7 MSTORE PUSH1 0x1 SWAP2 PUSH1 0x2 PUSH1 0x1 DUP8 ADD SLOAD SWAP7 DUP7 DUP10 ADD SWAP8 DUP9 MSTORE ADD SWAP1 DUP5 MLOAD SWAP4 DUP5 DUP8 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 DUP4 MSTORE DUP8 DUP4 KECCAK256 SWAP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x125 JUMPI POP POP POP POP SWAP6 PUSH2 0x10C DUP4 PUSH1 0x60 SWAP9 SUB DUP5 PUSH2 0x32C JUMP JUMPDEST DUP3 DUP5 DUP3 ADD MSTORE MLOAD AND SWAP4 MLOAD SWAP1 MLOAD SWAP3 DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST DUP4 SLOAD DUP7 AND DUP6 MSTORE SWAP4 DUP9 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 DUP3 ADD PUSH2 0xF2 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x2DB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2DB JUMPI PUSH2 0x159 PUSH2 0x2DF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2D7 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2D7 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP5 DUP5 DUP7 GT PUSH2 0x2D3 JUMPI DUP6 PUSH1 0x5 SHL SWAP4 PUSH1 0x24 DUP6 DUP5 ADD ADD CALLDATASIZE DUP2 GT PUSH2 0x2CF JUMPI SWAP3 SWAP2 SWAP1 SWAP4 PUSH2 0x1A5 DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 DUP1 SWAP3 AND DUP1 DUP5 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP6 ADD SWAP11 PUSH1 0x7B DUP13 MSTORE PUSH2 0x1CD DUP9 DUP6 MLOAD SWAP12 ADD DUP12 PUSH2 0x32C JUMP JUMPDEST DUP10 MSTORE PUSH1 0x24 DUP8 DUP11 ADD SWAP7 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x2A5 JUMPI POP POP PUSH1 0x2 SWAP5 POP DUP2 DUP5 ADD SWAP8 DUP9 MSTORE DUP11 MSTORE DUP10 DUP6 MSTORE DUP10 KECCAK256 SWAP2 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x1 SWAP7 MLOAD PUSH1 0x1 DUP3 ADD SSTORE ADD SWAP3 MLOAD DUP1 MLOAD SWAP5 DUP6 GT PUSH2 0x291 JUMPI PUSH9 0x10000000000000000 DUP6 GT PUSH2 0x291 JUMPI DUP2 SWAP1 DUP5 SLOAD DUP7 DUP7 SSTORE DUP1 DUP8 LT PUSH2 0x267 JUMPI JUMPDEST POP ADD SWAP3 DUP7 MSTORE DUP1 DUP7 KECCAK256 SWAP2 DUP7 JUMPDEST DUP6 DUP2 LT PUSH2 0x254 JUMPI DUP8 DUP1 RETURN JUMPDEST DUP5 MLOAD DUP3 AND DUP5 DUP3 ADD SSTORE SWAP4 DUP3 ADD SWAP4 DUP7 ADD PUSH2 0x249 JUMP JUMPDEST DUP6 DUP10 MSTORE DUP8 DUP8 DUP5 DUP12 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x283 JUMPI POP POP PUSH2 0x23E JUMP JUMPDEST DUP11 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH2 0x275 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP1 SWAP3 SWAP5 POP SWAP6 SWAP1 SWAP3 SWAP5 SWAP6 CALLDATALOAD DUP9 DUP2 AND DUP2 SUB PUSH2 0x2CB JUMPI DUP2 MSTORE DUP7 ADD SWAP5 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP8 ADD PUSH2 0x1D7 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2F5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x316 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x316 JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xEA XOR GASLIMIT LOG1 0xC0 MUL JUMP LOG2 SSTORE CALL CALLER PUSH8 0x4D83E12DB028D0E6 SLOAD PUSH28 0xD903F5715DF7C63A1C64736F6C634300081800330000000000000000 ","sourceMap":"61:625:0:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":735,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":812,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_4108":{"entryPoint":762,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604090808252600436101561001557600080fd5b600090813560e01c90816305de8c061461013e575080636cba97091461008a57638828136c1461004457600080fd5b34610087576020366003190112610087576001600160a01b039060019083908361006c6102df565b16815280602052209182541691015482519182526020820152f35b80fd5b50346100875760208060031936011261013a576001600160a01b0392836100af6102df565b168352828252808320928151946100c5866102fa565b80855416865260019160026001870154968689019788520190845193848784549182815201938352878320925b81811061012557505050509561010c83606098038461032c565b8284820152511693519051928251948552840152820152f35b835486168552938801939282019282016100f2565b5080fd5b905082346102db57806003193601126102db576101596102df565b67ffffffffffffffff91906024358381116102d757366023820112156102d7578060040135948486116102d3578560051b936024858401013681116102cf57929190936101a5826102fa565b60018060a01b0394858092168084526020958685019a607b8c526101cd8885519b018b61032c565b89526024878a0196015b8181106102a5575050600294508184019788528a5289855289209151166bffffffffffffffffffffffff60a01b8254161781556001965160018201550192518051948511610291576801000000000000000085116102915781908454868655808710610267575b500192865280862091865b858110610254578780f35b8451821684820155938201938601610249565b8589528787848b2092830192015b82811061028357505061023e565b8a8155859450899101610275565b634e487b7160e01b87526041600452602487fd5b8092945095909294953588811681036102cb5781528601949387939092909187016101d7565b8c80fd5b8880fd5b8680fd5b8580fd5b8280fd5b600435906001600160a01b03821682036102f557565b600080fd5b6060810190811067ffffffffffffffff82111761031657604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176103165760405256fea2646970667358221220deea1845a1c00256a255f133674d83e12db028d0e6547bd903f5715df7c63a1c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x5DE8C06 EQ PUSH2 0x13E JUMPI POP DUP1 PUSH4 0x6CBA9709 EQ PUSH2 0x8A JUMPI PUSH4 0x8828136C EQ PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x87 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x1 SWAP1 DUP4 SWAP1 DUP4 PUSH2 0x6C PUSH2 0x2DF JUMP JUMPDEST AND DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP3 SLOAD AND SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x87 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH2 0xAF PUSH2 0x2DF JUMP JUMPDEST AND DUP4 MSTORE DUP3 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP3 DUP2 MLOAD SWAP5 PUSH2 0xC5 DUP7 PUSH2 0x2FA JUMP JUMPDEST DUP1 DUP6 SLOAD AND DUP7 MSTORE PUSH1 0x1 SWAP2 PUSH1 0x2 PUSH1 0x1 DUP8 ADD SLOAD SWAP7 DUP7 DUP10 ADD SWAP8 DUP9 MSTORE ADD SWAP1 DUP5 MLOAD SWAP4 DUP5 DUP8 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 DUP4 MSTORE DUP8 DUP4 KECCAK256 SWAP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x125 JUMPI POP POP POP POP SWAP6 PUSH2 0x10C DUP4 PUSH1 0x60 SWAP9 SUB DUP5 PUSH2 0x32C JUMP JUMPDEST DUP3 DUP5 DUP3 ADD MSTORE MLOAD AND SWAP4 MLOAD SWAP1 MLOAD SWAP3 DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST DUP4 SLOAD DUP7 AND DUP6 MSTORE SWAP4 DUP9 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 DUP3 ADD PUSH2 0xF2 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x2DB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2DB JUMPI PUSH2 0x159 PUSH2 0x2DF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2D7 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2D7 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP5 DUP5 DUP7 GT PUSH2 0x2D3 JUMPI DUP6 PUSH1 0x5 SHL SWAP4 PUSH1 0x24 DUP6 DUP5 ADD ADD CALLDATASIZE DUP2 GT PUSH2 0x2CF JUMPI SWAP3 SWAP2 SWAP1 SWAP4 PUSH2 0x1A5 DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 DUP1 SWAP3 AND DUP1 DUP5 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP6 ADD SWAP11 PUSH1 0x7B DUP13 MSTORE PUSH2 0x1CD DUP9 DUP6 MLOAD SWAP12 ADD DUP12 PUSH2 0x32C JUMP JUMPDEST DUP10 MSTORE PUSH1 0x24 DUP8 DUP11 ADD SWAP7 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x2A5 JUMPI POP POP PUSH1 0x2 SWAP5 POP DUP2 DUP5 ADD SWAP8 DUP9 MSTORE DUP11 MSTORE DUP10 DUP6 MSTORE DUP10 KECCAK256 SWAP2 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x1 SWAP7 MLOAD PUSH1 0x1 DUP3 ADD SSTORE ADD SWAP3 MLOAD DUP1 MLOAD SWAP5 DUP6 GT PUSH2 0x291 JUMPI PUSH9 0x10000000000000000 DUP6 GT PUSH2 0x291 JUMPI DUP2 SWAP1 DUP5 SLOAD DUP7 DUP7 SSTORE DUP1 DUP8 LT PUSH2 0x267 JUMPI JUMPDEST POP ADD SWAP3 DUP7 MSTORE DUP1 DUP7 KECCAK256 SWAP2 DUP7 JUMPDEST DUP6 DUP2 LT PUSH2 0x254 JUMPI DUP8 DUP1 RETURN JUMPDEST DUP5 MLOAD DUP3 AND DUP5 DUP3 ADD SSTORE SWAP4 DUP3 ADD SWAP4 DUP7 ADD PUSH2 0x249 JUMP JUMPDEST DUP6 DUP10 MSTORE DUP8 DUP8 DUP5 DUP12 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x283 JUMPI POP POP PUSH2 0x23E JUMP JUMPDEST DUP11 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH2 0x275 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP1 SWAP3 SWAP5 POP SWAP6 SWAP1 SWAP3 SWAP5 SWAP6 CALLDATALOAD DUP9 DUP2 AND DUP2 SUB PUSH2 0x2CB JUMPI DUP2 MSTORE DUP7 ADD SWAP5 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP8 ADD PUSH2 0x1D7 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2F5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x316 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x316 JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xEA XOR GASLIMIT LOG1 0xC0 MUL JUMP LOG2 SSTORE CALL CALLER PUSH8 0x4D83E12DB028D0E6 SLOAD PUSH28 0xD903F5715DF7C63A1C64736F6C634300081800330000000000000000 ","sourceMap":"61:625:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;61:625:0;;;;-1:-1:-1;;;;;61:625:0;192:37;;61:625;;;;;:::i;:::-;;;;;;;;;;;;192:37;;61:625;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:625:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;340:95;;;;61:625;390:3;61:625;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;340:95;;61:625;340:95;;;;;61:625;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;61:625:0;;;;;;-1:-1:-1;;;61:625:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;61:625:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"getTest(address)":"6cba9709","setTest(address,address[])":"05de8c06","tests(address)":"8828136c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"setTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestStruct.sol\":\"TestStruct\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/TestStruct.sol\":{\"keccak256\":\"0xddb9e9b7f9481771db401166c056f2ebb0f6f30d3e2a8f52fbcde2a9883b40f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54b1e70f5c0fa5279886b40270875b07d8e9127fee39f6dcb306304760021abd\",\"dweb:/ipfs/QmNR5gJq1Qod2Qo8Vx8XEKKadTYA3aEa6CrwPmRwyHRjEC\"]}},\"version\":1}"}}}}}